#############################################################################
# КАКОЙ ИСПОЛЬЗУЕТСЯ ПРОВАЙДЕР И РЕГИОН
#############################################################################

provider "aws" {
    region = "us-east-2"
}

#############################################################################
# Amazon S3 Bucket
#############################################################################

# Создадим ресурс "aws_s3_bucket" и дадим ему имя "terraform_state"
# Дадим глобально-уникальное имя корзине (bucket). Имя должно быть уникальным на весь интернет
resource "aws_s3_bucket" "terraform_state" {
    bucket = "terraform-state"
    acl    = "private"

    # Защита от случайного удаления S3 bucket
    # Даже командой terraform destroy невозможно будет удалить эту корзину
    # Если потребуется ее удалить, то просто закомментируйте эти строки
    lifecycle {
        prevent_destroy = true
       }

    # Включить версионирование, чтобы мы могли видеть полную историю ревизий файлов состояния
    # При каждом деплое будет создаваться навая версия файла состояния
    # Таким образом можно легко будет откатиться на нужную версию
    versioning {
        enabled = true
    }
    
    # Включить шифрование на стороне Amazon
       server_side_encryption_configuration {
        rule {
            apply_server_side_encryption_by_default {
            sse_algorithm = "AES256"
            }
        }
    }
}

#############################################################################
# Amazon DynamoDB - это распределенное хранилище ключей и значений
# Он поддерживает строго согласованные операции чтения и условной записи,
#  которые являются всеми компонентами, необходимыми для системы распределенной блокировки
#############################################################################

# В DynamoDB создадим таблицу "terraform_locks" с первичным ключом "LockID" для использования блокировки
# 
resource "aws_dynamodb_table" "terraform_locks" {
    name = "terraform-state-locks"
    billing_mode = "PAY_PER_REQUEST"
    hash_key = "LockID"
    
    attribute {
        name = "LockID"
        type = "S"
    }
}